name: Test
on: [pull_request, workflow_dispatch]
permissions:
  contents: read
  pages: write
  id-token: write
jobs:
  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm install
      - name: Generate database bindings
        run: npm run "prisma generate"
      - name: Build app
        run: npm run build
      - name: Save build
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: .next

  e2e:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: build
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').devDependencies['@playwright/test'].version)")" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install dependencies
        run: npm install
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - name: Load build
        uses: actions/download-artifact@v4
        with:
          name: build
          path: .next
      - name: Generate database tables
        run: npm run "prisma deploy"
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
      - name: Run Playwright tests
        run: npx playwright test --max-failures=10
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
          NEXT_PUBLIC_SECRET: Testrunner
          NEXTAUTH_URL: http://127.0.0.1:3000
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days:

  unittest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm install
      - name: Run the tests
        run: npm test
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  publish-e2e:
    runs-on: ubuntu-latest
    needs: [e2e, build]
    if: ${{ !cancelled() && (needs.build.result=='success') }}
    steps:
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v3
      - name: Load report
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: playwright-report/
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v2
